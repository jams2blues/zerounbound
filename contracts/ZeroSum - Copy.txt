parameter (or
            (or
              (or
                (pair %accept_offer (nat %amount)
                                    (pair (address %nft_contract)
                                          (pair (address %offeror) (nat %token_id))))
                (pair %buy (nat %amount) (pair (address %nft_contract) (nat %token_id))))
              (or (pair %cancel_listing (address %nft_contract) (nat %token_id))
                  (pair %distribute_splits (mutez %amount)
                                           (pair (bool %check_sum)
                                                 (list %splits (pair (address %address)
                                                                    (nat %percent)))))))
            (or
              (or
                (pair %distribute_with_royalties
                  (list %royalty_splits (pair (address %address) (nat %percent)))
                  (pair (list %sale_splits (pair (address %address) (nat %percent)))
                        (mutez %total_amount)))
                (pair %list_token (nat %amount)
                                  (pair (address %nft_contract)
                                        (pair (mutez %price)
                                              (pair
                                                (list %royalty_splits (pair
                                                                       (address %address)
                                                                       (nat %percent)))
                                                (pair
                                                  (list %sale_splits (pair
                                                                      (address %address)
                                                                      (nat %percent)))
                                                  (pair (int %start_delay)
                                                        (nat %token_id))))))))
              (or
                (pair %make_offer (nat %amount)
                                  (pair (address %nft_contract)
                                        (pair (mutez %price) (nat %token_id))))
                (or
                  (list %receive_balance_check (pair
                                                (pair %request (address %owner)
                                                               (nat %token_id))
                                                (nat %balance)))
                  (pair %withdraw_offer (address %nft_contract) (nat %token_id))))));
storage (pair (bytes %contract_id)
              (pair
                (big_map %listings (pair address nat)
                                   (pair (bool %active)
                                         (pair (nat %amount)
                                               (pair (address %nft_contract)
                                                     (pair (mutez %price)
                                                           (pair
                                                             (list %royalty_splits (pair
                                                                                    (address %address)
                                                                                    (nat %percent)))
                                                             (pair
                                                               (list %sale_splits (pair
                                                                                   (address %address)
                                                                                   (nat %percent)))
                                                               (pair (address %seller)
                                                                     (pair
                                                                       (timestamp %start_time)
                                                                       (nat %token_id))))))))))
                (pair (big_map %metadata string bytes)
                      (pair
                        (big_map %offers (pair address nat)
                                         (map address
                                              (pair (bool %accepted)
                                                    (pair (nat %amount)
                                                          (pair (address %offeror)
                                                                (pair (mutez %price)
                                                                      (timestamp %timestamp)))))))
                        (pair
                          (big_map %pending_balance_checks (pair address nat) address)
                          (big_map %royalty_registry (pair address nat)
                                                     (list (pair (address %address)
                                                                (nat %percent)))))))));
code { LAMBDA
         (list (pair address nat))
         unit
         { PUSH nat 0 ;
           SWAP ;
           ITER { CDR ; ADD } ;
           PUSH nat 10000 ;
           COMPARE ;
           EQ ;
           IF {} { PUSH string "Splits must sum to 10000" ; FAILWITH } ;
           UNIT } ;
       SWAP ;
       UNPAIR ;
       IF_LEFT
         { IF_LEFT
             { IF_LEFT
                 { DUP ;
                   GET 6 ;
                   DUP 2 ;
                   GET 3 ;
                   PAIR ;
                   DUP 3 ;
                   GET 3 ;
                   DUP 2 ;
                   MEM ;
                   IF {} { PUSH string "Not listed" ; FAILWITH } ;
                   DUP 3 ;
                   GET 3 ;
                   DUP 2 ;
                   GET ;
                   IF_NONE { PUSH int 406 ; FAILWITH } {} ;
                   SENDER ;
                   DUP 2 ;
                   GET 13 ;
                   COMPARE ;
                   EQ ;
                   IF {} { PUSH string "Not seller" ; FAILWITH } ;
                   DUP 4 ;
                   GET 7 ;
                   DUP 3 ;
                   MEM ;
                   IF {} { PUSH string "No offers" ; FAILWITH } ;
                   DUP 4 ;
                   GET 7 ;
                   DUP 3 ;
                   GET ;
                   IF_NONE { PUSH int 409 ; FAILWITH } {} ;
                   DUP ;
                   DUP 5 ;
                   GET 5 ;
                   MEM ;
                   IF {} { PUSH string "Offer not found" ; FAILWITH } ;
                   DUP ;
                   DUP 5 ;
                   GET 5 ;
                   GET ;
                   IF_NONE { PUSH int 411 ; FAILWITH } {} ;
                   DUP ;
                   CAR ;
                   IF { PUSH string "Offer already accepted" ; FAILWITH } {} ;
                   PUSH nat 0 ;
                   DUP 6 ;
                   CAR ;
                   COMPARE ;
                   GT ;
                   IF {} { PUSH string "Invalid accept amount" ; FAILWITH } ;
                   DUP ;
                   GET 3 ;
                   DUP 6 ;
                   CAR ;
                   COMPARE ;
                   LE ;
                   IF {} { PUSH string "Offer does not have enough" ; FAILWITH } ;
                   DUP 3 ;
                   GET 3 ;
                   DUP 6 ;
                   CAR ;
                   COMPARE ;
                   LE ;
                   IF {} { PUSH string "Not enough listed" ; FAILWITH } ;
                   NIL (pair address (list (pair address (pair nat nat)))) ;
                   NIL (pair address (pair nat nat)) ;
                   DUP 7 ;
                   CAR ;
                   DUP 8 ;
                   GET 6 ;
                   DUP 5 ;
                   GET 5 ;
                   PAIR 3 ;
                   CONS ;
                   DUP 5 ;
                   GET 13 ;
                   PAIR ;
                   CONS ;
                   DUP 6 ;
                   GET 3 ;
                   CONTRACT %transfer (list (pair (address %from_)
                                                 (list %txs (pair (address %to_)
                                                                 (pair (nat %token_id)
                                                                       (nat %amount)))))) ;
                   DUP ;
                   IF_NONE { PUSH string "Invalid FA2 contract" ; FAILWITH } { DROP } ;
                   DUP ;
                   IF_NONE { PUSH int 435 ; FAILWITH } {} ;
                   NIL operation ;
                   DUP 2 ;
                   PUSH mutez 0 ;
                   DUP 6 ;
                   TRANSFER_TOKENS ;
                   CONS ;
                   DUP 9 ;
                   CAR ;
                   DUP 6 ;
                   GET 7 ;
                   MUL ;
                   DUP 8 ;
                   GET 11 ;
                   DUP 9 ;
                   GET 9 ;
                   PAIR 3 ;
                   SWAP ;
                   SELF %distribute_with_royalties ;
                   PUSH mutez 0 ;
                   DUP 4 ;
                   TRANSFER_TOKENS ;
                   CONS ;
                   SWAP ;
                   DUP 10 ;
                   CAR ;
                   DUP 9 ;
                   GET 3 ;
                   SUB ;
                   ISNAT ;
                   IF_NONE { PUSH int 446 ; FAILWITH } {} ;
                   DUP 11 ;
                   CAR ;
                   DUP 8 ;
                   GET 3 ;
                   SUB ;
                   ISNAT ;
                   IF_NONE { PUSH int 447 ; FAILWITH } {} ;
                   DUP ;
                   INT ;
                   EQ ;
                   IF
                     { DIG 8 ;
                       NONE (pair bool (pair nat (pair address (pair mutez timestamp)))) ;
                       DUP 13 ;
                       GET 5 ;
                       UPDATE ;
                       DUG 8 }
                     { DUP 8 ;
                       GET 8 ;
                       DUP 9 ;
                       GET 7 ;
                       DUP 10 ;
                       GET 5 ;
                       DUP 4 ;
                       DUP 12 ;
                       CAR ;
                       PAIR 5 ;
                       DIG 9 ;
                       SWAP ;
                       SOME ;
                       DUP 13 ;
                       GET 5 ;
                       UPDATE ;
                       DUG 8 } ;
                   PUSH nat 0 ;
                   DUP 10 ;
                   SIZE ;
                   COMPARE ;
                   EQ ;
                   IF
                     { DIG 12 ;
                       DUP ;
                       GET 7 ;
                       NONE (map address
                                 (pair bool
                                       (pair nat (pair address (pair mutez timestamp))))) ;
                       DUP 14 ;
                       UPDATE ;
                       UPDATE 7 ;
                       DUG 12 }
                     { DIG 12 ; DUP ; GET 7 ; DUP 11 ; SOME ; DUP 14 ; UPDATE ; UPDATE 7 ; DUG 12 } ;
                   DUP 2 ;
                   INT ;
                   EQ ;
                   IF
                     { DROP 3 ;
                       SWAP ;
                       DROP ;
                       SWAP ;
                       DROP ;
                       SWAP ;
                       DROP ;
                       SWAP ;
                       DROP ;
                       SWAP ;
                       DROP ;
                       SWAP ;
                       DROP ;
                       DIG 2 ;
                       DROP ;
                       DIG 3 ;
                       DROP ;
                       DIG 2 ;
                       DUP ;
                       GET 3 ;
                       NONE (pair bool
                                  (pair nat
                                        (pair address
                                              (pair mutez
                                                    (pair (list (pair address nat))
                                                          (pair
                                                            (list (pair address nat))
                                                            (pair address
                                                                  (pair timestamp nat)))))))) ;
                       DIG 4 ;
                       UPDATE ;
                       UPDATE 3 ;
                       SWAP }
                     { DIG 12 ;
                       DUP ;
                       GET 3 ;
                       DUP 12 ;
                       GET 16 ;
                       DUP 13 ;
                       GET 15 ;
                       DUP 14 ;
                       GET 13 ;
                       DUP 15 ;
                       GET 11 ;
                       DUP 16 ;
                       GET 9 ;
                       DUP 17 ;
                       GET 7 ;
                       DUP 18 ;
                       GET 5 ;
                       DUP 11 ;
                       DUP 20 ;
                       CAR ;
                       PAIR 9 ;
                       DIG 3 ;
                       DROP ;
                       DIG 3 ;
                       DROP ;
                       DIG 3 ;
                       DROP ;
                       DIG 4 ;
                       DROP ;
                       DIG 4 ;
                       DROP ;
                       DIG 4 ;
                       DROP ;
                       DIG 4 ;
                       DROP ;
                       DIG 4 ;
                       DROP ;
                       DIG 4 ;
                       DROP ;
                       DIG 5 ;
                       DROP ;
                       DIG 5 ;
                       DROP ;
                       SOME ;
                       DIG 4 ;
                       UPDATE ;
                       UPDATE 3 ;
                       SWAP } }
                 { DUP ;
                   GET 4 ;
                   DUP 2 ;
                   GET 3 ;
                   PAIR ;
                   DUP 3 ;
                   GET 3 ;
                   DUP 2 ;
                   MEM ;
                   IF {} { PUSH string "Not listed" ; FAILWITH } ;
                   DUP 3 ;
                   GET 3 ;
                   DUP 2 ;
                   GET ;
                   IF_NONE { PUSH int 293 ; FAILWITH } {} ;
                   DUP ;
                   CAR ;
                   IF {} { PUSH string "Inactive listing" ; FAILWITH } ;
                   DUP ;
                   GET 15 ;
                   NOW ;
                   COMPARE ;
                   GE ;
                   IF {} { PUSH string "Listing not active yet" ; FAILWITH } ;
                   PUSH nat 0 ;
                   DUP 4 ;
                   CAR ;
                   COMPARE ;
                   GT ;
                   IF {} { PUSH string "Invalid amount" ; FAILWITH } ;
                   DUP ;
                   GET 3 ;
                   DUP 4 ;
                   CAR ;
                   COMPARE ;
                   LE ;
                   IF {} { PUSH string "Not enough editions" ; FAILWITH } ;
                   DUP 3 ;
                   CAR ;
                   DUP 2 ;
                   GET 7 ;
                   MUL ;
                   AMOUNT ;
                   COMPARE ;
                   EQ ;
                   IF {} { PUSH string "Incorrect price" ; FAILWITH } ;
                   NIL (pair address (list (pair address (pair nat nat)))) ;
                   NIL (pair address (pair nat nat)) ;
                   DUP 5 ;
                   CAR ;
                   DUP 6 ;
                   GET 4 ;
                   SENDER ;
                   PAIR 3 ;
                   CONS ;
                   DUP 3 ;
                   GET 13 ;
                   PAIR ;
                   CONS ;
                   DUP 4 ;
                   GET 3 ;
                   CONTRACT %transfer (list (pair (address %from_)
                                                 (list %txs (pair (address %to_)
                                                                 (pair (nat %token_id)
                                                                       (nat %amount)))))) ;
                   DUP ;
                   IF_NONE { PUSH string "Invalid FA2 contract" ; FAILWITH } { DROP } ;
                   DUP ;
                   IF_NONE { PUSH int 320 ; FAILWITH } {} ;
                   NIL operation ;
                   DUP 2 ;
                   PUSH mutez 0 ;
                   DUP 6 ;
                   TRANSFER_TOKENS ;
                   CONS ;
                   DUP 7 ;
                   CAR ;
                   DUP 6 ;
                   GET 7 ;
                   MUL ;
                   DUP 6 ;
                   GET 11 ;
                   DUP 7 ;
                   GET 9 ;
                   PAIR 3 ;
                   SWAP ;
                   SELF %distribute_with_royalties ;
                   PUSH mutez 0 ;
                   DUP 4 ;
                   TRANSFER_TOKENS ;
                   CONS ;
                   SWAP ;
                   DUP 8 ;
                   CAR ;
                   DUP 7 ;
                   GET 3 ;
                   SUB ;
                   ISNAT ;
                   IF_NONE { PUSH int 332 ; FAILWITH } {} ;
                   DUP ;
                   INT ;
                   EQ ;
                   IF
                     { DROP 2 ;
                       SWAP ;
                       DROP ;
                       SWAP ;
                       DROP ;
                       SWAP ;
                       DROP ;
                       SWAP ;
                       DROP ;
                       DIG 2 ;
                       DROP ;
                       DIG 3 ;
                       DROP ;
                       DIG 2 ;
                       DUP ;
                       GET 3 ;
                       NONE (pair bool
                                  (pair nat
                                        (pair address
                                              (pair mutez
                                                    (pair (list (pair address nat))
                                                          (pair
                                                            (list (pair address nat))
                                                            (pair address
                                                                  (pair timestamp nat)))))))) ;
                       DIG 4 ;
                       UPDATE ;
                       UPDATE 3 ;
                       SWAP }
                     { DIG 9 ;
                       DUP ;
                       GET 3 ;
                       DUP 9 ;
                       GET 16 ;
                       DUP 10 ;
                       GET 15 ;
                       DUP 11 ;
                       GET 13 ;
                       DUP 12 ;
                       GET 11 ;
                       DUP 13 ;
                       GET 9 ;
                       DUP 14 ;
                       GET 7 ;
                       DUP 15 ;
                       GET 5 ;
                       DUP 10 ;
                       DUP 17 ;
                       CAR ;
                       PAIR 9 ;
                       DIG 3 ;
                       DROP ;
                       DIG 3 ;
                       DROP ;
                       DIG 4 ;
                       DROP ;
                       DIG 4 ;
                       DROP ;
                       DIG 4 ;
                       DROP ;
                       DIG 4 ;
                       DROP ;
                       DIG 5 ;
                       DROP ;
                       DIG 5 ;
                       DROP ;
                       SOME ;
                       DIG 4 ;
                       UPDATE ;
                       UPDATE 3 ;
                       SWAP } } }
             { IF_LEFT
                 { DIG 2 ;
                   DROP ;
                   DUP 2 ;
                   GET 3 ;
                   DUP 2 ;
                   MEM ;
                   IF {} { PUSH string "Not listed" ; FAILWITH } ;
                   DUP 2 ;
                   GET 3 ;
                   DUP 2 ;
                   GET ;
                   IF_NONE { PUSH int 280 ; FAILWITH } {} ;
                   GET 13 ;
                   SENDER ;
                   COMPARE ;
                   EQ ;
                   IF {} { PUSH string "Not authorized" ; FAILWITH } ;
                   SWAP ;
                   DUP ;
                   GET 3 ;
                   NONE (pair bool
                              (pair nat
                                    (pair address
                                          (pair mutez
                                                (pair (list (pair address nat))
                                                      (pair (list (pair address nat))
                                                            (pair address
                                                                  (pair timestamp nat)))))))) ;
                   DIG 3 ;
                   UPDATE ;
                   UPDATE 3 ;
                   NIL operation }
                 { PUSH nat 0 ;
                   DUP 2 ;
                   GET 4 ;
                   ITER { CDR ; ADD } ;
                   DUP 2 ;
                   GET 3 ;
                   IF
                     { PUSH nat 10000 ;
                       DUP 2 ;
                       COMPARE ;
                       EQ ;
                       IF {} { PUSH string "Invalid split sum" ; FAILWITH } }
                     {} ;
                   NIL operation ;
                   DUP 3 ;
                   GET 4 ;
                   ITER { SWAP ;
                          DUP 2 ;
                          CAR ;
                          CONTRACT unit ;
                          IF_NONE { PUSH int 151 ; FAILWITH } {} ;
                          DUP 5 ;
                          GET 3 ;
                          IF { PUSH nat 10000 } { DUP 4 } ;
                          DIG 3 ;
                          CDR ;
                          DUP 6 ;
                          CAR ;
                          MUL ;
                          EDIV ;
                          IF_NONE { PUSH int 151 ; FAILWITH } {} ;
                          CAR ;
                          UNIT ;
                          TRANSFER_TOKENS ;
                          CONS } ;
                   SWAP ;
                   DROP ;
                   SWAP ;
                   DROP ;
                   DIG 2 ;
                   DROP } } }
         { IF_LEFT
             { IF_LEFT
                 { DIG 2 ;
                   DROP ;
                   PUSH nat 0 ;
                   DUP 2 ;
                   CAR ;
                   ITER { CDR ; ADD } ;
                   DUP ;
                   INT ;
                   GT ;
                   IF
                     { PUSH nat 10000 ;
                       SWAP ;
                       DUP 3 ;
                       GET 4 ;
                       MUL ;
                       EDIV ;
                       IF_NONE { PUSH int 173 ; FAILWITH } {} ;
                       CAR ;
                       DUP ;
                       DUP 3 ;
                       GET 4 ;
                       SUB_MUTEZ ;
                       IF_NONE { PUSH int 174 ; FAILWITH } {} ;
                       DUP 3 ;
                       CAR ;
                       PUSH bool False ;
                       DIG 3 ;
                       PAIR 3 ;
                       NIL operation ;
                       SELF %distribute_splits ;
                       PUSH mutez 0 ;
                       DIG 3 ;
                       TRANSFER_TOKENS ;
                       CONS ;
                       DIG 2 ;
                       GET 3 ;
                       PUSH bool True ;
                       DIG 3 ;
                       PAIR 3 ;
                       SWAP ;
                       SELF %distribute_splits ;
                       PUSH mutez 0 ;
                       DIG 3 ;
                       TRANSFER_TOKENS ;
                       CONS }
                     { DROP ;
                       DUP ;
                       GET 3 ;
                       PUSH bool True ;
                       DIG 2 ;
                       GET 4 ;
                       PAIR 3 ;
                       NIL operation ;
                       SELF %distribute_splits ;
                       PUSH mutez 0 ;
                       DIG 3 ;
                       TRANSFER_TOKENS ;
                       CONS } }
                 { DUP ;
                   GET 12 ;
                   DUP 2 ;
                   GET 3 ;
                   PAIR ;
                   DUP 3 ;
                   GET 10 ;
                   DUP 2 ;
                   MEM ;
                   IF
                     {}
                     { DIG 2 ; DUP ; GET 10 ; DUP 4 ; GET 7 ; SOME ; DUP 4 ; UPDATE ; UPDATE 10 ; DUG 2 } ;
                   DUP 3 ;
                   GET 10 ;
                   DUP 2 ;
                   MEM ;
                   IF
                     { DUP 3 ; GET 10 ; DUP 2 ; GET ; IF_NONE { PUSH int 211 ; FAILWITH } {} }
                     { NIL (pair address nat) } ;
                   NOW ;
                   DUP 6 ;
                   DUP 5 ;
                   GET 9 ;
                   EXEC ;
                   DROP ;
                   DIG 4 ;
                   DUP ;
                   GET 3 ;
                   DUP 6 ;
                   GET 12 ;
                   DUP 7 ;
                   GET 11 ;
                   DUP 5 ;
                   ADD ;
                   SENDER ;
                   DUP 9 ;
                   GET 9 ;
                   DUP 8 ;
                   DUP 11 ;
                   GET 5 ;
                   DUP 12 ;
                   GET 3 ;
                   DUP 13 ;
                   CAR ;
                   PUSH bool False ;
                   PAIR 9 ;
                   DIG 3 ;
                   DROP ;
                   DIG 3 ;
                   DROP ;
                   DIG 5 ;
                   DROP ;
                   SOME ;
                   DIG 3 ;
                   UPDATE ;
                   UPDATE 3 ;
                   DUP ;
                   GET 9 ;
                   DUP 3 ;
                   GET 3 ;
                   SOME ;
                   DUP 4 ;
                   GET 12 ;
                   SENDER ;
                   PAIR ;
                   UPDATE ;
                   UPDATE 9 ;
                   SWAP ;
                   SELF %receive_balance_check ;
                   NIL (pair address nat) ;
                   DUP 3 ;
                   GET 12 ;
                   SENDER ;
                   PAIR ;
                   CONS ;
                   PAIR ;
                   SWAP ;
                   GET 3 ;
                   CONTRACT %balance_of (pair
                                          (list %requests (pair (address %owner)
                                                               (nat %token_id)))
                                          (contract %callback (list (pair
                                                                    (pair %request
                                                                      (address %owner)
                                                                      (nat %token_id))
                                                                    (nat %balance))))) ;
                   DUP ;
                   IF_NONE { PUSH string "Invalid FA2 contract" ; FAILWITH } { DROP } ;
                   IF_NONE { PUSH int 243 ; FAILWITH } {} ;
                   NIL operation ;
                   SWAP ;
                   PUSH mutez 0 ;
                   DIG 3 ;
                   TRANSFER_TOKENS ;
                   CONS } }
             { IF_LEFT
                 { PUSH mutez 0 ;
                   DUP 2 ;
                   GET 5 ;
                   COMPARE ;
                   GT ;
                   IF {} { PUSH string "Invalid offer price" ; FAILWITH } ;
                   PUSH nat 0 ;
                   DUP 2 ;
                   CAR ;
                   COMPARE ;
                   GT ;
                   IF {} { PUSH string "Invalid offer amount" ; FAILWITH } ;
                   DUP ;
                   CAR ;
                   DUP 2 ;
                   GET 5 ;
                   MUL ;
                   AMOUNT ;
                   COMPARE ;
                   EQ ;
                   IF {} { PUSH string "Incorrect tez sent" ; FAILWITH } ;
                   DUP ;
                   GET 6 ;
                   DUP 2 ;
                   GET 3 ;
                   PAIR ;
                   DUP 3 ;
                   GET 7 ;
                   DUP 2 ;
                   MEM ;
                   IF
                     {}
                     { DIG 2 ;
                       DUP ;
                       GET 7 ;
                       PUSH (option (map address
                                     (pair bool
                                           (pair nat
                                                 (pair address (pair mutez timestamp)))))) (Some {}) ;
                       DUP 4 ;
                       UPDATE ;
                       UPDATE 7 ;
                       DUG 2 } ;
                   DUP 3 ;
                   GET 7 ;
                   DUP 2 ;
                   GET ;
                   IF_NONE { PUSH int 366 ; FAILWITH } {} ;
                   SENDER ;
                   SWAP ;
                   NOW ;
                   DUP 5 ;
                   GET 5 ;
                   DUP 4 ;
                   DUP 7 ;
                   CAR ;
                   PUSH bool False ;
                   PAIR 5 ;
                   DIG 4 ;
                   DROP ;
                   DIG 5 ;
                   DROP ;
                   SOME ;
                   DIG 2 ;
                   UPDATE ;
                   DIG 2 ;
                   DUP ;
                   GET 7 ;
                   DIG 2 ;
                   SOME ;
                   DIG 3 ;
                   UPDATE ;
                   UPDATE 7 ;
                   NIL operation }
                 { IF_LEFT
                     { DUP ;
                       ITER { DUP ;
                              CAR ;
                              CDR ;
                              DUP 2 ;
                              CAR ;
                              CAR ;
                              PAIR ;
                              DUP 4 ;
                              GET 9 ;
                              DUP 2 ;
                              MEM ;
                              IF {} { PUSH string "No pending check" ; FAILWITH } ;
                              DUP 4 ;
                              GET 9 ;
                              DUP 2 ;
                              GET ;
                              IF_NONE { PUSH int 254 ; FAILWITH } {} ;
                              DUP 3 ;
                              CAR ;
                              CDR ;
                              DUP 2 ;
                              PAIR ;
                              DUP 6 ;
                              GET 3 ;
                              DUP 2 ;
                              MEM ;
                              IF {} { PUSH string "No pending listing" ; FAILWITH } ;
                              DUP 6 ;
                              GET 3 ;
                              DUP 2 ;
                              GET ;
                              IF_NONE { PUSH int 257 ; FAILWITH } {} ;
                              DUP ;
                              GET 3 ;
                              DUP 6 ;
                              CDR ;
                              COMPARE ;
                              GE ;
                              IF
                                {}
                                { PUSH string "Insufficient balance to list" ; FAILWITH } ;
                              DIG 6 ;
                              DUP ;
                              GET 3 ;
                              DUP 3 ;
                              GET 16 ;
                              DUP 4 ;
                              GET 15 ;
                              DUP 5 ;
                              GET 13 ;
                              DUP 6 ;
                              GET 11 ;
                              DUP 7 ;
                              GET 9 ;
                              DUP 8 ;
                              GET 7 ;
                              DUP 9 ;
                              GET 5 ;
                              DUP 10 ;
                              GET 3 ;
                              PUSH bool True ;
                              PAIR 9 ;
                              DIG 3 ;
                              DROP ;
                              DIG 4 ;
                              DROP ;
                              DIG 5 ;
                              DROP ;
                              SOME ;
                              DIG 3 ;
                              UPDATE ;
                              UPDATE 3 ;
                              DUP ;
                              GET 9 ;
                              NONE address ;
                              DIG 3 ;
                              UPDATE ;
                              UPDATE 9 ;
                              SWAP } ;
                       DROP ;
                       SWAP ;
                       DROP ;
                       NIL operation }
                     { DUP ;
                       CDR ;
                       DUP 2 ;
                       CAR ;
                       PAIR ;
                       DUP 3 ;
                       GET 7 ;
                       DUP 2 ;
                       MEM ;
                       IF {} { PUSH string "No offers for this NFT" ; FAILWITH } ;
                       DUP 3 ;
                       GET 7 ;
                       DUP 2 ;
                       GET ;
                       IF_NONE { PUSH int 385 ; FAILWITH } {} ;
                       SENDER ;
                       DUP 2 ;
                       DUP 2 ;
                       MEM ;
                       IF {} { PUSH string "No offer from sender" ; FAILWITH } ;
                       DUP 2 ;
                       DUP 2 ;
                       GET ;
                       IF_NONE { PUSH int 388 ; FAILWITH } {} ;
                       DIG 2 ;
                       NONE (pair bool (pair nat (pair address (pair mutez timestamp)))) ;
                       DUP 4 ;
                       UPDATE ;
                       DUG 2 ;
                       NIL operation ;
                       DIG 2 ;
                       CONTRACT unit ;
                       IF_NONE { PUSH int 390 ; FAILWITH } {} ;
                       DIG 2 ;
                       DUP ;
                       GET 3 ;
                       SWAP ;
                       GET 7 ;
                       MUL ;
                       UNIT ;
                       TRANSFER_TOKENS ;
                       CONS ;
                       PUSH nat 0 ;
                       DUP 3 ;
                       SIZE ;
                       COMPARE ;
                       EQ ;
                       IF
                         { SWAP ;
                           DROP ;
                           DIG 2 ;
                           DROP ;
                           DIG 3 ;
                           DROP ;
                           DIG 2 ;
                           DUP ;
                           GET 7 ;
                           NONE (map address
                                     (pair bool
                                           (pair nat
                                                 (pair address (pair mutez timestamp))))) ;
                           DIG 4 ;
                           UPDATE ;
                           UPDATE 7 ;
                           SWAP }
                         { DIG 3 ;
                           DROP ;
                           DIG 4 ;
                           DROP ;
                           DIG 3 ;
                           DUP ;
                           GET 7 ;
                           DIG 3 ;
                           SOME ;
                           DIG 4 ;
                           UPDATE ;
                           UPDATE 7 ;
                           SWAP } } } } } ;
       NIL operation ;
       SWAP ;
       ITER { CONS } ;
       PAIR }