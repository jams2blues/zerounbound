Contract entrypoints
0.
add_child(address)
Json schema:
"schema:address": "address"
Michelson type:
(address %add_child)
1.
add_collaborator(address)
Json schema:
"schema:address": "address"
Michelson type:
(address %add_collaborator)
2.
add_parent(address)
Json schema:
"schema:address": "address"
Michelson type:
(address %add_parent)
3.
balance_of(list<object> requests, contract callback)
Json schema:
"schema:object": {
    "requests:list:object": [
        {
            "owner:address": "address",
            "token_id:nat": "nat"
        }
    ],
    "callback:contract": "contract"
}
Michelson type:
(pair %balance_of (list %requests (pair (address %owner) (nat %token_id)))
                  (contract %callback (list (pair (pair %request (address %owner) (nat %token_id))
                                                (nat %balance)))))
4.
burn(nat amount, nat token_id)
Json schema:
"schema:object": {
    "amount:nat": "nat",
    "token_id:nat": "nat"
}
Michelson type:
(pair %burn (nat %amount) (nat %token_id))
5.
mint(nat amount, map<string, bytes> metadata, address to_)
Json schema:
"schema:object": {
    "amount:nat": "nat",
    "metadata:map_flat:string:bytes": {
        "string": "bytes"
    },
    "to_:address": "address"
}
Michelson type:
(pair %mint (nat %amount) (pair (map %metadata string bytes) (address %to_)))
6.
remove_child(address)
Json schema:
"schema:address": "address"
Michelson type:
(address %remove_child)
7.
remove_collaborator(address)
Json schema:
"schema:address": "address"
Michelson type:
(address %remove_collaborator)
8.
remove_parent(address)
Json schema:
"schema:address": "address"
Michelson type:
(address %remove_parent)
9.
transfer(list<object>)
Json schema:
"schema:list:object": [
    {
        "from_:address": "address",
        "txs:list:object": [
            {
                "to_:address": "address",
                "token_id:nat": "nat",
                "amount:nat": "nat"
            }
        ]
    }
]
Michelson type:
(list %transfer (pair (address %from_)
                     (list %txs (pair (address %to_) (pair (nat %token_id) (nat %amount))))))
10.
update_operators(list<or>)
Json schema:
"schema:list:or": [
    {
        "add_operator:object": {
            "operator:address": "address",
            "owner:address": "address",
            "token_id:nat": "nat"
        },
        "remove_operator:object": {
            "operator:address": "address",
            "owner:address": "address",
            "token_id:nat": "nat"
        }
    }
]
Michelson type:
(list %update_operators (or
                         (pair %add_operator (address %operator)
                                             (pair (address %owner) (nat %token_id)))
                         (pair %remove_operator (address %operator)
                                                (pair (address %owner) (nat %token_id)))))